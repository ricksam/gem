#pragma checksum "D:\PROJECTS\RckSoftware\CCB\gem\Views\Graficos\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "02e97b180519085bd876c8d95c97b18ebdf8e2e5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Graficos_Index), @"mvc.1.0.view", @"/Views/Graficos/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\PROJECTS\RckSoftware\CCB\gem\Views\_ViewImports.cshtml"
using GEM;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\PROJECTS\RckSoftware\CCB\gem\Views\_ViewImports.cshtml"
using GEM.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"02e97b180519085bd876c8d95c97b18ebdf8e2e5", @"/Views/Graficos/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"897aa4d6df6414ee158a0704d46d7dbd531adc45", @"/Views/_ViewImports.cshtml")]
    public class Views_Graficos_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\PROJECTS\RckSoftware\CCB\gem\Views\Graficos\Index.cshtml"
  
    Layout = null;
    string categorias = GEM.Helpers.JSON.Serialize(ViewBag.categorias);
    string vozes = GEM.Helpers.JSON.Serialize(ViewBag.vozes);
    string vozesCordas = (ViewBag.vozesCordas != null ? GEM.Helpers.JSON.Serialize(ViewBag.vozesCordas) : "[]");
    string vozesMadeiras = (ViewBag.vozesMadeiras != null ? GEM.Helpers.JSON.Serialize(ViewBag.vozesMadeiras) : "[]");
    string vozesMetais = (ViewBag.vozesMetais != null ? GEM.Helpers.JSON.Serialize(ViewBag.vozesMetais) : "[]");
    string instrumentos = GEM.Helpers.JSON.Serialize(ViewBag.instrumentos);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
        .chart {
            width: 100%; 
            min-height: 450px;
        }
    </style>

<div class=""row"">
    <div class=""form-group col-md-6"">
        <div id=""chart_div_category"" class=""chart""></div>
    </div>
    <div class=""form-group col-md-6"">
        <div id=""chart_div_voices"" class=""chart""></div>
    </div>
    <div class=""form-group col-md-4"">
        <div id=""chart_div_vozes_cordas"" class=""chart""></div>
    </div>
    <div class=""form-group col-md-4"">
        <div id=""chart_div_vozes_madeiras"" class=""chart""></div>
    </div>
    <div class=""form-group col-md-4"">
        <div id=""chart_div_vozes_metais"" class=""chart""></div>
    </div>
    <div class=""form-group col-md-12"">
        <div id=""chart_div_instruments"" class=""chart""></div>
    </div>
</div>
    <!--Div that will hold the pie chart-->
    
    
    <script type=""text/javascript"">
      // Load the Visualization API and the corechart package.
		google.charts.load('current', {'packages':['co");
            WriteLiteral(@"rechart']});

	// Set a callback to run when the Google Visualization API is loaded.
	google.charts.setOnLoadCallback(drawChartCategory);
	google.charts.setOnLoadCallback(drawChartVoices);
    google.charts.setOnLoadCallback(drawChartVozesCordas);
    google.charts.setOnLoadCallback(drawChartVozesMadeiras);
    google.charts.setOnLoadCallback(drawChartVozesMetais);
    google.charts.setOnLoadCallback(drawChartInstruments);
		
	  // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawChartCategory() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Nome');
        data.addColumn('number', 'Qtde.');
        data.addRows(");
#nullable restore
#line 62 "D:\PROJECTS\RckSoftware\CCB\gem\Views\Graficos\Index.cshtml"
                Write(Html.Raw(categorias));

#line default
#line hidden
#nullable disable
            WriteLiteral(@");

        // Set chart options
        var options = {
            'title':'Distribuição por categoria',
            //hAxis: {title: 'Year', titleTextStyle: {color: 'red'}},
            colors: ['#35bf30', '#bf3030', '#3051bf', '#36bf30', '#7630bf', '#bf8730', '#30bfbf', '#bf30ae']
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div_category'));
        chart.draw(data, options);
      }
	  
	  // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawChartVoices() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Nome');
        data.addColumn('number', 'Qtde.');
        data.addRows(");
#nullable restore
#line 85 "D:\PROJECTS\RckSoftware\CCB\gem\Views\Graficos\Index.cshtml"
                Write(Html.Raw(vozes));

#line default
#line hidden
#nullable disable
            WriteLiteral(@");

        // Set chart options
        var options = {
            'title':'Distribuição por vozes',
            //hAxis: {title: 'Year', titleTextStyle: {color: 'red'}},
            colors: ['#305dbf', '#bf3030', '#bfb630', '#36bf30', '#bf30ae', '#30bfbf', '#bf8730', '#7630bf']
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div_voices'));
        chart.draw(data, options);
      }

      // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawChartVozesCordas() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Nome');
        data.addColumn('number', 'Qtde.');
        data.addRows(");
#nullable restore
#line 108 "D:\PROJECTS\RckSoftware\CCB\gem\Views\Graficos\Index.cshtml"
                Write(Html.Raw(vozesCordas));

#line default
#line hidden
#nullable disable
            WriteLiteral(@");

        // Set chart options
        var options = {
            'title':'Distribuição por vozes (Cordas)',
            //hAxis: {title: 'Year', titleTextStyle: {color: 'red'}},
            colors: ['#35bf30', '#428040', '#30bfa5', '#30bfb6']
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div_vozes_cordas'));
        chart.draw(data, options);
      }

      // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawChartVozesMadeiras() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Nome');
        data.addColumn('number', 'Qtde.');
        data.addRows(");
#nullable restore
#line 131 "D:\PROJECTS\RckSoftware\CCB\gem\Views\Graficos\Index.cshtml"
                Write(Html.Raw(vozesMadeiras));

#line default
#line hidden
#nullable disable
            WriteLiteral(@");

        // Set chart options
        var options = {
            'title':'Distribuição por vozes (Madeira)',
            //hAxis: {title: 'Year', titleTextStyle: {color: 'red'}},
            colors: ['#bf3030', '#804040', '#bf8730', '#806740']
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div_vozes_madeiras'));
        chart.draw(data, options);
      }

      // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawChartVozesMetais() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Nome');
        data.addColumn('number', 'Qtde.');
        data.addRows(");
#nullable restore
#line 154 "D:\PROJECTS\RckSoftware\CCB\gem\Views\Graficos\Index.cshtml"
                Write(Html.Raw(vozesMetais));

#line default
#line hidden
#nullable disable
            WriteLiteral(@");

        // Set chart options
        var options = {
            'title':'Distribuição por vozes (Metais)',
            //hAxis: {title: 'Year', titleTextStyle: {color: 'red'}},
            colors: ['#3051bf', '#404f80', '#9d30bf', '#704080']
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div_vozes_metais'));
        chart.draw(data, options);
      }

      // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawChartInstruments() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Nome');
        data.addColumn('number', 'Qtde.');
        data.addRows(");
#nullable restore
#line 177 "D:\PROJECTS\RckSoftware\CCB\gem\Views\Graficos\Index.cshtml"
                Write(Html.Raw(instrumentos));

#line default
#line hidden
#nullable disable
            WriteLiteral(@");

        // Set chart options
        var options = {
            'title':'Distribuição por instrumentos',
            hAxis: {title: 'Instrumentos', titleTextStyle: {color: 'black'}},
            colors: ['#405480', '#804040', '#bfb630', '#36bf30', '#7630bf', '#bf8730', '#30bfbf', '#bf30ae']
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.ColumnChart(document.getElementById('chart_div_instruments'));
        chart.draw(data, options);
      }
    </script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
