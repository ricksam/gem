using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using System.Net;
using System.Net.Mail;
using Microsoft.Extensions.Options;

namespace GEM.Helpers
{
    public class AuthMessageSender : GEM.Models.IEmailSender
    {
        public AuthMessageSender(IOptions<GEM.Models.EmailSettings> emailSettings)
        {
            _emailSettings = emailSettings.Value;
        }

        public GEM.Models.EmailSettings _emailSettings { get; }

        public string SendEmailAsync(string email, string subject, string message)
        {
            System.Net.ServicePointManager.SecurityProtocol =
                System.Net.SecurityProtocolType.Tls
                | System.Net.SecurityProtocolType.Tls11 
                | System.Net.SecurityProtocolType.Tls12 
                | System.Net.SecurityProtocolType.Tls13;
            return Execute(email, subject, message);
            //return Task.FromResult(0);
        }

        public string Execute(string email, string subject, string message)
        {
            try
            {
                string toEmail = string.IsNullOrEmpty(email)
                                 ? _emailSettings.ToEmail
                                 : email;
                MailMessage mail = new MailMessage()
                {
                    From = new MailAddress(_emailSettings.UsernameEmail, "Musicos CCB azure")
                };
                mail.To.Add(new MailAddress(toEmail));
                if (!string.IsNullOrEmpty(_emailSettings.CcEmail)) {
                    mail.CC.Add(new MailAddress(_emailSettings.CcEmail));
                }
                
                mail.Subject = "Personal Management System - " + subject;
                mail.Body = message;
                mail.IsBodyHtml = true;
                mail.Priority = MailPriority.High;

                using (SmtpClient smtp = new SmtpClient(_emailSettings.PrimaryDomain, _emailSettings.SecondaryPort))
                {
                    smtp.Credentials = new NetworkCredential(_emailSettings.UsernameEmail, _emailSettings.UsernamePassword);
                    smtp.EnableSsl = true;
                    smtp.Send(mail);
                }
                return "ok";
            }
            catch (Exception ex)
            {
                //do something here
                return string.Format("{0}<br />{1}<br />{2}<br />{3}<br />{4}<br />",
                    _emailSettings.PrimaryDomain,
                    _emailSettings.SecondaryPort,
                    _emailSettings.UsernameEmail,
                    ex.Message,
                    ex.StackTrace);
                    
            }
        }
    }
}
